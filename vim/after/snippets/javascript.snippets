snippet des describe('...', function () {...});
	describe('${1:description}', function () {
		${2}
	});
snippet bef beforeEach(function () {...});
	beforeEach(function () {
		${1}
	});
snippet aft afterEach(function () {...});
	afterEach(function () {
		${1}
	});
snippet it it('...', function () { expect(...).toBe(...); });
	it('${1:should}', function () {
		expect(${2:target}).to${3:Be}(${4:value});
	});
snippet eb expect(...).toBe(...);
	expect(${1:target}).toBe(${2:value});
snippet ec expect(...).toContain(...);
	expect(${1:target}).toContain(${2:value});
snippet ee expect(...).toEqual(...);
	expect(${1:target}).toEqual(${2:value});
snippet et expect(...).toBeTruthy();
	expect(${1:target}).toBeTruthy();
snippet ef expect(...).toBeFalsy();
	expect(${1:target}).toBeFalsy();
snippet ebc expect(...).toHaveBeenCalled();
	expect(${1:target}).toHaveBeenCalled();
snippet ebcw expect(...).toHaveBeenCalledWith(...);
	expect(${1:target}).toHaveBeenCalledWith(${2:value});
snippet spy spyOn(..., '...');
	spyOn(${1:target}, '${2:method}');
snippet spyc spyOn(..., '...').andCallThrough();
	spyOn(${1:target}, '${2:method}').andCallThrough();
snippet spyr spyOn(..., '...').andReturn(...);
	spyOn(${1:target}, '${2:method}').andReturn(${3:value});
snippet spyt spyOn(..., '...').andThrow(...);
	spyOn(${1:target}, '${2:method}').andThrow(${3:error});
