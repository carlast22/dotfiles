" Initialize pathogen.
execute pathogen#infect()

" Personal preferences
set expandtab
set tabstop=2
set shiftwidth=2
set autoindent
set smartindent
set cursorline
set list
set iskeyword+=-
if exists('+colorcolumn')
  set colorcolumn=80
endif

" Open NERDTree if `vim` is called without arguments.
autocmd vimenter * if !argc() | NERDTree | endif
" Close vim if NERDTree is the only window left open.
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif

" http://vimcasts.org/episodes/tidying-whitespace/
function! <SID>StripTrailingWhitespaces()
  " Preparation: save last search, and cursor position.
  let _s=@/
  let l = line(".")
  let c = col(".")
  " Do the business:
  %s/\s\+$//e
  " Clean up: restore previous search history, and cursor position
  let @/=_s
  call cursor(l, c)
endfunction

" autocmd BufWritePre *.py,*.js :call <SID>StripTrailingWhitespaces()

" Key bindings.
map <C-n> :NERDTreeToggle<CR>
nnoremap <silent> <F5> :call <SID>StripTrailingWhitespaces()<CR>
" Pasting code.
" http://vim.wikia.com/wiki/Toggle_auto-indenting_for_code_paste
nnoremap <F2> :set invpaste paste?<CR>
set pastetoggle=<F2>
set showmode
" Reindent the whole file
" http://vim.wikia.com/wiki/Fix_indentation
map <F7> mzgg=G`z<CR>
" Tab shortcuts
nnoremap <C-t>     :tabnew<CR>
inoremap <C-t>     <Esc>:tabnew<CR>

" Set default colorscheme.
colorscheme Sunburst

" Zencoding (Emmet) config
let g:user_emmet_settings = {
  \  'haml' : {
  \    'filters' : 'haml',
  \  },
  \}

" SuperTab config
let g:SuperTabDefaultCompletionType = "<c-x><c-o>"
autocmd FileType *
  \ if &omnifunc != '' |
  \   call SuperTabChain(&omnifunc, "<c-n>") |
  \   call SuperTabSetDefaultCompletionType("<c-x><c-u>") |
  \ endif
